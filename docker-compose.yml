version: "3.8"

services:
  # redis配置
  redis:
    image: redis:7.2.5
    container_name: study-java-redis-container
    ports:
      - "6381:6379"
    networks:
      - study-java-network
  # mysql配置
  mysql:
    image: mysql:8.4.2
    container_name: study-java-mysql-container
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: study_java
    ports:
      - "3308:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - study-java-network
  # 后端配置
  springboot:
    image: xcy960815/study-java:1.1
    container_name: study-java-container
    depends_on:
      - redis
      - mysql
    ports:
      - "12316:8084"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      # redis配置
      SPRING_REDIS_HOST: study-java-redis-container
      SPRING_REDIS_PORT: 6379
      # mysql配置
      SPRING_DATASOURCE_URL: jdbc:mysql://study-java-mysql-container:3306/study_java?useUnicode=true&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Shanghai
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 123456

    networks:
      - study-java-network
  # 前端配置
  vue:
    image: xcy960815/study-java-web:1.1
    container_name: study-java-web-container
#    build: ./frontend  # 假设有前端代码的目录
    ports:
      - "12315:80"
    environment:
      VITE_API_SERVER_DOMAIN: 'http://study-java-container:12316'  # 配置前端访问后端的地址
    networks:
      - study-java-network

volumes:
  mysql-data:

networks:
  study-java-network:
    driver: bridge

# 执行指令
#  docker-compose up -d
